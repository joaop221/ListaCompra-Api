<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ListaCompra.Servicos</name>
    </assembly>
    <members>
        <member name="T:ListaCompra.Servicos.Config.ApiConfig">
            <summary>
            Inicializa e configura configurações do cache de configurações
            </summary>
        </member>
        <member name="M:ListaCompra.Servicos.Config.ApiConfig.AddSingletons(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adiciona serviço de cache na aplicação - destinado a cache de notificações
            </summary>
            <param name="services">servicos da aplicação</param>
        </member>
        <member name="T:ListaCompra.Servicos.Config.AuthConfig">
            <summary>
            
            </summary>
        </member>
        <member name="M:ListaCompra.Servicos.Config.AuthConfig.AddAuth(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
            <summary>
            Define configurações de autenticação
            </summary>
            <param name="services">servicos da aplicação</param>
            <param name="signingKey">chave do token</param>
        </member>
        <member name="T:ListaCompra.Servicos.Config.SwaggerConfig">
            <summary>
            Classe de configuração e especificação dos serviços do Swagger
            </summary>
        </member>
        <member name="M:ListaCompra.Servicos.Config.SwaggerConfig.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adiciona e configura serviços do Swagger
            </summary>
            <param name="services">serviços da aplicação</param>
        </member>
        <member name="M:ListaCompra.Servicos.Config.SwaggerConfig.UseSwaggerConfig(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Ativa serviços do swagger na aplicação e define caminho do json
            </summary>
            <param name="app">Contexto da aplicação</param>
        </member>
        <member name="T:ListaCompra.Servicos.Controllers.BaseController">
            <summary>
            Controller base da aplicação
            </summary>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.BaseController.#ctor">
            <summary>
            Construtor da classe
            </summary>
        </member>
        <member name="P:ListaCompra.Servicos.Controllers.BaseController.IdUsuario">
            <summary>
            Usuario que esta demandando a ação
            </summary>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.BaseController.ExecucaoTratada``1(System.Action{``0})">
            <summary>
            Execução tratada
            </summary>
            <typeparam name="TResult">Tipo do Resultado da chamada</typeparam>
            <param name="action">Ação da Execução</param>
            <returns>Resultado da chamada</returns>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.BaseController.VerificaAuth">
            <summary>
            Verifica token de autorização
            </summary>
            <returns>True se for valido</returns>
        </member>
        <member name="T:ListaCompra.Servicos.Controllers.GrupoController">
            <summary>
            Controller de métodos relacionados a Grupos
            </summary>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.GrupoController.#ctor">
            <summary>
            Contrutor do controller de grupo
            </summary>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.GrupoController.Criar(ListaCompra.Modelo.Grupo)">
            <summary>
            Método padrão de criação de grupo
            </summary>
            <param name="grupo">Grupo a ser criado</param>
            <returns>Id do grupo criado</returns>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.GrupoController.List(System.Int32)">
            <summary>
            Consulta Grupos pelo Id
            </summary>
            <returns>Grupos da consulta</returns>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.GrupoController.Post(ListaCompra.Modelo.Grupo)">
            <summary>
            Criação de Grupo
            </summary>
            <param name="grupo">Grupo a ser criada</param>
            <returns>Id do Grupo</returns>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.GrupoController.Put(ListaCompra.Modelo.Grupo)">
            <summary>
            Atualização de Grupo
            </summary>
            <param name="grupo">Grupo a ser atualizada</param>
            <returns></returns>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.GrupoController.Delete(System.Int32)">
            <summary>
            Deleta Grupo pelo Id
            </summary>
            <param name="id">Id da Grupo a ser deletada</param>
            <returns>True se sucesso</returns>
        </member>
        <member name="T:ListaCompra.Servicos.Controllers.ListaController">
            <summary>
            Controller de métodos relacionados a Lista de Produtos
            </summary>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.ListaController.#ctor">
            <summary>
            Contrutor do controller de listas
            </summary>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.ListaController.Get(System.Int32)">
            <summary>
            Consulta lista pelo Id
            </summary>
            <returns>Lista da consulta</returns>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.ListaController.Post(ListaCompra.Modelo.Lista)">
            <summary>
            Criação de Lista
            </summary>
            <param name="lista">Lista a ser criada</param>
            <returns>Id da lista</returns>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.ListaController.Put(ListaCompra.Modelo.Lista)">
            <summary>
            Atualização de Lista
            </summary>
            <param name="lista">Lista a ser atualizada</param>
            <returns></returns>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.ListaController.Delete(System.Int32)">
            <summary>
            Deleta Lista pelo Id
            </summary>
            <param name="id">Id da Lista a ser deletada</param>
            <returns>True se sucesso</returns>
        </member>
        <member name="T:ListaCompra.Servicos.Controllers.NotificacaoController">
            <summary>
            Controller de métodos relacionados a Notificações
            </summary>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.NotificacaoController.#ctor">
            <summary>
            Contrutor do controller de notificações
            </summary>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.NotificacaoController.Get(System.Int32)">
            <summary>
            Consulta de Notificacoes
            </summary>
            <param name="id">ID do usuário</param>
            <returns>Hello</returns>
        </member>
        <member name="T:ListaCompra.Servicos.Controllers.ProdutoController">
            <summary>
            Controller de métodos relacionados a Produtos
            </summary>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.ProdutoController.#ctor">
            <summary>
            Contrutor do controller de produtos
            </summary>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.ProdutoController.Get(System.Int32)">
            <summary>
            Consulta produto pelo Id
            </summary>
            <returns>Produto da consulta</returns>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.ProdutoController.List(System.Int32)">
            <summary>
            Consulta produtos pelo Id
            </summary>
            <returns>Produtos da consulta</returns>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.ProdutoController.Post(ListaCompra.Modelo.Produto)">
            <summary>
            Criação de produto
            </summary>
            <param name="produto">Produto a ser criada</param>
            <returns>Id do produto</returns>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.ProdutoController.Put(ListaCompra.Modelo.Produto)">
            <summary>
            Atualização de produto
            </summary>
            <param name="produto">Produto a ser atualizada</param>
            <returns></returns>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.ProdutoController.Delete(System.Int32)">
            <summary>
            Deleta Produto pelo Id
            </summary>
            <param name="id">Id da Produto a ser deletada</param>
            <returns>True se sucesso</returns>
        </member>
        <member name="T:ListaCompra.Servicos.Controllers.UsuarioController">
            <summary>
            Controller de Usuário
            </summary>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.UsuarioController.#ctor">
            <summary>
            Construtor do controller
            </summary>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.UsuarioController.Criar(ListaCompra.Modelo.Usuario)">
            <summary>
            Método padrão de criação de usuário
            </summary>
            <param name="usuario">Usuário a ser criado</param>
            <returns>Grupo padrão do usuário</returns>
        </member>
        <member name="M:ListaCompra.Servicos.Controllers.UsuarioController.Login(System.String,System.String)">
            <summary>
            Método padrão de login de usuário
            </summary>
            <param name="usuario">Usuário</param>
            <param name="senha">Senha</param>
            <returns>Se sucesso Lista de Grupos de usuário</returns>
        </member>
        <member name="T:ListaCompra.Servicos.Filters.FilterValidation">
            <summary>
            Filtra e valida requisições
            </summary>
        </member>
        <member name="M:ListaCompra.Servicos.Filters.FilterValidation.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Valida entrada
            </summary>
            <param name="actionContext"></param>
        </member>
        <member name="T:ListaCompra.Servicos.Program">
            <summary>
            Classe de inicialização da aplicação
            </summary>
        </member>
        <member name="M:ListaCompra.Servicos.Program.Main(System.String[])">
            <summary>
            Método de inicialização da aplicação
            </summary>
            <param name="args">Argumentos de entrada</param>
        </member>
        <member name="M:ListaCompra.Servicos.Program.BuildWebHost(System.String[])">
            <summary>
            Método de construção da aplicação, inicializa serviços e configurações
            </summary>
            <param name="args">Argumento de estrada</param>
            <returns>Web Api inicializada</returns>
        </member>
        <member name="T:ListaCompra.Servicos.Startup">
            <summary>
            Classe de inicialização da aplicação
            </summary>
        </member>
        <member name="P:ListaCompra.Servicos.Startup.Configuration">
            <summary>
            Configurações iniciais da aplicação
            </summary>
        </member>
        <member name="P:ListaCompra.Servicos.Startup.ConnectionString">
            <summary>
            Define connection string da aplicação
            </summary>
        </member>
        <member name="M:ListaCompra.Servicos.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Construtor da classe Startup
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:ListaCompra.Servicos.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Método chamada pela aplicação em tempo de execução para configurar todos os serviços
            </summary>
            <param name="services">Serviços</param>
        </member>
        <member name="M:ListaCompra.Servicos.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Método chamada pela aplicação em tempo de execução para configurar a aplicação
            </summary>
            <param name="app">Contexto da aplicação</param>
            <param name="env">Ambiente</param>
            <param name="loggerFactory">Console de Log</param>
        </member>
    </members>
</doc>
